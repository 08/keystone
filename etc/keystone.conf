[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = False

# Show debugging output in logs (sets DEBUG log level output)
debug = False

# Which backend store should Keystone use by default.
# Default: 'sqlite'
# Available choices are 'sqlite' [future will include LDAP, PAM, etc]
default_store = sqlite

# Log to this file. Make sure you do not set the same log
# file for both the API and registry servers!
#
#log_file = /var/log/keystone.log
log_file = keystone.log

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
sql_connection = sqlite:///../keystone/keystone.db

# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
sql_idle_timeout = 30

#Dictionary Maps every service to a header.Missing services would get header X_(SERVICE_NAME) Key => Service Name, Value => Header Name
service-header-mappings = {'nova' : 'X-Server-Management-Url' , 'swift' : 'X-Storage-Url', 'CDN' : 'X-CDN-Management-Url'}

# Address to bind the API server
#TODO Properties defined within app not available via pipeline.Till then server props stay outside.
server_bind_host = 0.0.0.0

# Port the bind the API server to
server_bind_port = 8080
[app:admin]
paste.app_factory = keystone.server:admin_app_factory

# Address to bind the Admin API server
bind_host = 0.0.0.0

# Port the bind the Admin API server to
bind_port = 8081


[app:server]
paste.app_factory = keystone.server:app_factory

[pipeline:keystone-legacy-auth]
pipeline =
    legacy_auth
    server

[filter:legacy_auth]
paste.filter_factory = keystone.frontends.legacy_token_auth:filter_factory

